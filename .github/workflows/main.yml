name: Deploy to GitHub Pages

# Executa esta ação toda vez que você envia ("push") código para a branch 'main'
on:
  push:
    branches:
      - main  # Ou 'master', dependendo do nome da sua branch principal

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o seu código do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Cria o arquivo firebase-config.js com os seus segredos
      - name: Create Firebase config file
        run: |
          # Cria o arquivo firebase-config.js a partir do seu molde
          cp firebase-config-template.js firebase-config.js
          
          # Substitui os placeholders pelas suas chaves secretas
          sed -i "s|__FIREBASE_API_KEY__|${{ secrets.FIREBASE_API_KEY }}|g" firebase-config.js
          sed -i "s|__FIREBASE_AUTH_DOMAIN__|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g" firebase-config.js
          sed -i "s|__FIREBASE_PROJECT_ID__|${{ secrets.FIREBASE_PROJECT_ID }}|g" firebase-config.js
          sed -i "s|__FIREBASE_STORAGE_BUCKET__|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g" firebase-config.js
          sed -i "s|__FIREBASE_MESSAGING_SENDER_ID__|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g" firebase-config.js
          sed -i "s|__FIREBASE_APP_ID__|${{ secrets.FIREBASE_APP_ID }}|g" firebase-config.js

      # 3. Faz o deploy para a branch gh-pages, que é usada pelo GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . # Publica a pasta raiz do projeto
          # As linhas abaixo foram adicionadas para garantir um deploy limpo
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          force_orphan: true

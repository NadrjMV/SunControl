# Nome do seu workflow
name: Deploy to Firebase Hosting

# Gatilho: Este workflow roda toda vez que houver um push na branch 'main'
on:
  push:
    branches:
      - main # ou a branch principal do seu projeto

jobs:
  deploy:
    # A máquina virtual que o workflow usará
    runs-on: ubuntu-latest

    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Encontra e substitui os placeholders pelos secrets do GitHub
      - name: Replace Firebase config
        run: |
          sed -i 's|__FIREBASE_API_KEY__|${{ secrets.FIREBASE_API_KEY }}|g' index.html
          sed -i 's|__FIREBASE_AUTH_DOMAIN__|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g' index.html
          sed -i 's|__FIREBASE_PROJECT_ID__|${{ secrets.FIREBASE_PROJECT_ID }}|g' index.html
          sed -i 's|__FIREBASE_STORAGE_BUCKET__|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g' index.html
          sed -i 's|__FIREBASE_MESSAGING_SENDER_ID__|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g' index.html
          sed -i 's|__FIREBASE_APP_ID__|${{ secrets.FIREBASE_APP_ID }}|g' index.html

      # 3. Faz o deploy dos arquivos (com as chaves já inseridas) para o Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SUNCONTROL_D2D94 }}' # IMPORTANTE: Veja o passo 3
          channelId: live
          projectId: 'suncontrol-d2d94' # O ID do seu projeto Firebase
